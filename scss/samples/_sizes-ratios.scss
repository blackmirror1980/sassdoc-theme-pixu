// Ratio & Size Samples
// ====================

/// # Documenting ratios & sizes
///
/// Pixu provides custom annotations
/// for visualizing sizes and ratios,
/// along with other design tokens.
/// See the [`sass.jsonfile` configuration][json]
/// to ensure that Pixu has access
/// to your exported Sass data.
///
/// [json]: CONFIGURATION.html#sass-jsonfile
///
/// In addition to documenting colors and fonts,
/// you can use Pixu to document and display ratios and sizes.
/// In the end, Pixu will need a map --
/// but we'll start with individual ratios/sizes,
/// and build the export from there.
///
/// [color-preview]: demo_colors.html
///
/// Let's start with a ratio and two sizes:
///
/// ```scss
/// $line-height-ratio: 1.4;
/// $root: 18px;
/// $xlarge: 3rem;
/// ```
///
/// @group demo_sizes

$line-height-ratio: 1.4;
$root: 18px;
$xlarge: 3rem;

/// ## Preview ratios
///
/// In order to export our ratios to Pixu,
/// we'll want to combine them into maps
/// of name/value pairs.
/// Sass does not provide any shortcuts for automating this step,
/// or removing the duplication,
/// but you can use a tool like our [Accoutrement-Scale][scale]
/// to store and access ratios
/// directly in a Pixu-friendly map.
///
/// [scale]: http://oddbird.net/accoutrement-scale/
///
/// ```scss
/// $demo-ratios: (
///   'line-height': $line-height-ratio
/// );
/// ```
///
/// Create as many maps as you like
/// to organize different types of ratios --
/// text, spacing, etc.
/// Each map will be displayed individually,
/// using the `@ratios` annotation:
///
/// ```scss
/// /// @ratios my-ratios
/// ```
///
/// The `@ratios` annotation accepts an optional one-word key argument,
/// which defaults to the map-variable name.
/// That key will be used to access the data from JSON,
/// so it doesn't matter what key is used,
/// as long as the key given here matches the group-name
/// used when adding this data to `$pixu`.
///
/// @ratios
/// @group demo_sizes
$demo-ratios: ('line-height': $line-height-ratio);

/// ## Preview sizes
///
/// Similar to ratios,
/// sizes can be combined into any number of maps
/// to preview with Pixu.
/// you can build these maps out of existing variables,
/// or use a tool like our [Accoutrement-Scale][scale]
/// to store and access sizes
/// directly in a Pixu-friendly map.
///
/// [scale]: http://oddbird.net/accoutrement-scale/
///
/// ```scss
/// $demo-sizes: (
///   'root': $root,
///   'xlarge': $xlarge
/// );
/// ```
///
/// Each map will be displayed individually,
/// using the `@sizes` annotation:
///
/// ```scss
/// /// @sizes {ruler}
/// ```
///
/// The `@sizes` annotation accepts two optional arguments:
///
/// - An optional one-word key argument,
///   which defaults to the map-variable name.
///   That key will be used to access the data from JSON,
///   so it doesn't matter what key is used,
///   as long as the key given here matches the group-name
///   used when adding this data to `$pixu`.
/// - An optional `style` argument (in curly-brackets `{...}`),
///   defaulting to `text`,
///   which specifies the type of output to display:
///
///   - `text`: Displays a sentence of lorem-ipsum text for each given size.
///   - `ruler`: Displays horizontal bars of the given sizes.
///   - `ruler-large`: Displays horizontal bars --
///     each on their own line, for more visible space.
///   - `output-only`: Displays values only, without demonstration.
///
/// @group demo_sizes
$demo-sizes: (
  'root': $root,
  'xlarge': $xlarge
);

/// ### Text Sizes
/// ```scss
/// /// @sizes demo-sizes {text}
/// ```
/// @sizes demo-sizes {text}
/// @group demo_sizes

/// ### Rulers
/// ```scss
/// /// @sizes demo-sizes {ruler}
/// ```
/// @sizes demo-sizes {ruler}
/// @group demo_sizes

/// ### Large Rulers
/// ```scss
/// /// @sizes demo-sizes {ruler-large}
/// ```
/// @sizes demo-sizes {ruler-large}
/// @group demo_sizes

/// ### Name/Value Only
/// ```scss
/// /// @sizes demo-sizes {output-only}
/// ```
/// @sizes demo-sizes {output-only}
/// @group demo_sizes

/// ## Add ratio/size data to $pixu
///
/// In order to preview the `$demo-ratios` and `$demo-sizes` maps,
/// we also need to [export the data to JSON][export].
///
/// You can add data to the `$pixu` export-map by hand,
/// or use the provided `pixu-add` mixin
/// to combine existing maps into the proper structure.
/// [See the size/ratio map documentation for details Â»][size-docs]
///
/// ```scss
///  @include pixu-add('ratios', 'demo-ratios', $demo-ratios);
///  @include pixu-add('sizes', 'demo-sizes', $demo-sizes);
/// ```
///
/// If your map needs to be parsed or compiled before export,
/// you can pass additional compilation functions and arguments to `pixu-add`.
/// Once your data is all stored in the `$pixu` map,
/// it can be converted to JSON using `pixu-export`.
///
/// [export]: api_json-export.html
/// [size-docs]: api_json-export.html#sizes-ratios
///
/// @see $pixu
/// @see pixu-add
/// @see pixu-export
/// @group demo_sizes
/// @link http://oddbird.net/accoutrement-scale Accoutrement-Scale
@include pixu-add('ratios', 'demo-ratios', $demo-ratios);
@include pixu-add('sizes', 'demo-sizes', $demo-sizes);
