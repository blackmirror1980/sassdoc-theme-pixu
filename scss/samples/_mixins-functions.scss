// Mixin and Function Documentation
// ================================

/// # SassDoc Annotations
///
/// Pixu supports all the core
/// [SassDoc annotations](http://sassdoc.com/annotations/).
/// This page includes samples of every core annotation type,
/// so you can see what they look like in Pixu.
///
/// @group demo_test-sassdoc

// Pixu Sample
// -------------
/// This is a sample function.
/// You can actually put much more text in here,
/// and include markdown.
/// Lorem markdownum rapite neque loquentis pro inque; nullaque [triones
/// promisistis](http://duabuset-tandem.com/denos) quaque. Non iura oves creatas
/// mixta gente torum Caune. Huius sacra *corpora refert celeberrima* luctus tibi
/// cornua, nec qui [illum poteram](http://puta-elementa.com/vocequoque), et eundi
/// recalfecit efficiens isdem superi. Alii virginibusque vultus certa socios venae
/// ferrove finis longave, pignus duros nubifer!
///
/// - Tenuatus percussae tanta iudice Hippolytus miseram inmunis
/// - Ture Iovis holus est et vere
/// - Domus cum quid meae erras
/// - Quam apta fata puppis ergo solis praeteriti
///
/// @group demo_test-sassdoc
/// @see {function} sample-alias
/// @link http://oddbird.net OddBird Home Page
/// @todo Create more samples like this one
/// @todo Add more todo items
/// @author [Miriam Suzanne](http://oddbird.net/authors/miriam/)
/// @since 1.0.0-alpha.1 Adding samples files to the documentation.
/// @param {number} $one -
///   The first parameter is required, because no default is given
/// @param {number} $two [$one] -
///   Our second parameter defaults to the value of our first one
/// @param {string} $three ['three'] -
///   Looks like this one takes a string instead
/// @returns {list} All three of the arguments in order
/// @example scss - describe examples if you want...
///   .example::before {
///     content: pixu-sample(1, 2);
///   }
@function pixu-sample($one, $two: $one, $three: 'three') {
  @if (not $one) or (not $two) or (not $three) {
    @error 'Please provide values for all three parameters';
  }

  @return $one $two $three;
}

// Sample Alias
// ------------
/// This is a sample function alias.
/// @group demo_test-sassdoc
/// @alias pixu-sample
/// @deprecated I don't think this alias is useful anymore
@function sample-alias($one, $two: $one, $three: 'three') {
  @return pixu-sample($one, $two, $three);
}

// Sample Alias Two
// ----------------
/// This is a sample function alias.
/// @group demo_test-sassdoc
/// @alias pixu-sample
/// @deprecated Doesn't seem to work without a message
@function sample-alias-two($one, $two: $one, $three: 'three') {
  @return pixu-sample($one, $two, $three);
}

/// Extra Commentary
/// ================
/// Pixu allows you to write "prose" markdown blocks,
/// to help introduce groups,
/// or add narrative flow between documented items.
///
/// Note that while SassDoc allows annotation comments
/// to be separated from the documented code by newlines,
/// Pixu considers documentation to be free-floating "prose" if
/// it is separated from documented code by one or more newlines.
///
/// Prose blocks can also include examples, and other annotations.
/// @example scss
///   @import 'samples/variables';
///   .private::after {
///     content: $private;
///   }
/// @link http://sassdoc.com/annotations/
/// @group demo_test-sassdoc

// Mixin with Content
// ------------------
/// Mixins can optionally accept a @content block,
/// passed in brackets. This example creates
/// a generated element `:before` the element it is used on.
/// @group demo_test-sassdoc
/// @param {String} $content -
///   A value for the `content` property
/// @param {arglist} $listâ€¦ -
///   Sass also allows arglists!
/// @content
///   Any other styles that should be applied to the <code>::before</code> element
/// @output
///   A <code>::before</code> pseudo-element,
///   with the <code>content</code> property established,
///   and any passed-in styled applied.
/// @example scss
///   @import 'samples/mixins-functions';
///
///   .item {
///     @include before-sample('Test One: ') {
///       color: red;
///     }
///   }
@mixin before-sample($content, $list...) {
  &::before {
    content: $content;
    @content;
  }
}
